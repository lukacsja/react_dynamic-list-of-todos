{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","onTyping","onSelect","onClear","onChange","value","placeholder","style","pointerEvents","Loader","TodoModal","isLoadingUser","selectedUser","onClosePopUp","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","isLoadingTodos","setIsLoadingTodos","setSelectedTodo","setSelectedUser","setIsLoadingUser","setQuery","filteredTodos","setFilteredTodos","visibleTodos","filter","lowerTodo","toLowerCase","lowerQuery","trim","includes","useEffect","data","finally","userId","user","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0caeec31.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n\n            <p className={cn(\n              {\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={cn(\n                  'far',\n                  {\n                    'fa-eye': todo !== selectedTodo,\n                    'fa-eye-slash': todo === selectedTodo,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { ChangeEvent } from 'react';\n\ntype Props = {\n  query: string,\n  onTyping: (event: ChangeEvent<HTMLInputElement>) => void,\n  onSelect: (event: ChangeEvent<HTMLSelectElement>) => void,\n  onClear: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onTyping,\n  onSelect,\n  onClear,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={onSelect}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onTyping}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onClear}\n          />\n        </span>\n      )}\n\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  isLoadingUser: boolean,\n  selectedUser: User | null,\n  onClosePopUp: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  isLoadingUser,\n  selectedUser,\n  onClosePopUp,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClosePopUp}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn(\n                {\n                  'has-text-success': selectedTodo.completed,\n                  'has-text-danger': !selectedTodo.completed,\n                },\n              )}\n              >\n                {selectedTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n              <strong className=\"has-text-danger\">\n                {selectedTodo.completed}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport { getTodos, getUser } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadingTodos, setIsLoadingTodos] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoadingUser, setIsLoadingUser] = useState(false);\n  const [query, setQuery] = useState('');\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const closePopUp = () => {\n    setSelectedTodo(null);\n  };\n\n  const onTyping = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  const onSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    const filterType = event.target.value;\n\n    switch (filterType) {\n      case 'active':\n        setFilteredTodos(todos.filter(todo => !todo.completed));\n        break;\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  };\n\n  const visibleTodos = filteredTodos\n    .filter(todo => {\n      const lowerTodo = todo.title.toLowerCase();\n      const lowerQuery = query.toLowerCase().trim();\n\n      return lowerTodo.includes(lowerQuery);\n    });\n\n  useEffect(() => {\n    setIsLoadingTodos(true);\n    getTodos()\n      .then(data => {\n        setTodos(data);\n        setFilteredTodos(data);\n      })\n      .finally(() => {\n        setIsLoadingTodos(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    setIsLoadingUser(true);\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(user => {\n          setSelectedUser(user);\n        })\n        .finally(() => {\n          setIsLoadingUser(false);\n        });\n    }\n  }, [selectedTodo]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onTyping={onTyping}\n                onSelect={onSelect}\n                onClear={clearQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoadingTodos && (\n                <Loader />\n              )}\n\n              <TodoList\n                todos={visibleTodos}\n                selectTodo={selectTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedUser={selectedUser}\n          selectedTodo={selectedTodo}\n          isLoadingUser={isLoadingUser}\n          onClosePopUp={closePopUp}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}